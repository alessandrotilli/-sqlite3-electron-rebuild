# This is a basic workflow to help you get started with Actions

name: electron rebuild 

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      electron_version:
        description: 'Electron version'
        required: true

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # using older ubuntu to mitigate "/lib/x86_64-linux-gnu/libc.so.6: version `GLIBC_2.29' not found" error
        os: [macos-latest, windows-latest, ubuntu-18.04]

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup node
        uses: actions/setup-node@v3.2.0
        with:
          node-version: 16

      - name: yarn install
        run: yarn install

      - name: rebuild
        run: npx electron-rebuild -v "${{ github.event.inputs.electron_version }}"
        
      - name: apt install
        if: matrix.os == 'ubuntu-18.04'
        run: sudo apt-get install --no-install-recommends -y gcc-multilib g++-multilib
        
      - if: matrix.os != 'macos-latest'
        name: rebuild ia32
        run: npx electron-rebuild -v "${{ github.event.inputs.electron_version }}" -a ia32
        
      - name: list output
        run: ls -R node_modules/sqlite3/bin
        
      - name: set platform version
        id: os
        run: echo "::set-output name=name::${{ matrix.os == 'macos-latest' && 'darwin' || matrix.os == 'win-latest' && 'win32' || 'linux' }}"
                
      - name: rename output
        run: ./rename.sh
        env:
          ELECTRON_VERSION: ${{ github.event.inputs.electron_version }}

      - name: list renamed folder
        run: ls -R sqlite3-${{ steps.os.outputs.name }}
        
      - uses: meeDamian/github-release@2.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.event.inputs.electron_version }}
          name: ${{ github.event.inputs.electron_version }}
          gzip: folders
          files: sqlite3-${{ steps.os.outputs.name }}
